Imports System.ComponentModel
Imports System.IO
Imports System.Net
Imports System.Runtime.InteropServices.ComTypes
Imports System.Text
Imports System.Threading
Imports System.Web.UI.WebControls
Imports Newtonsoft
Imports Newtonsoft.Json
Imports Newtonsoft.Json.Linq

Public Class Form1

    Public ServerEngine As Server_Utils = New Server_Utils

    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        Dim LastID As String = My.Settings.LastID
        If String.IsNullOrEmpty(LastID) = False Then
            Guna2TextBox1.Text = LastID
        End If

        Dim LastCheck As String = My.Settings.LastCheck
        If String.IsNullOrEmpty(LastCheck) = False Then
            Guna2TextBox2.Text = LastCheck
        End If

        Guna2TextBox3.Text = My.Settings.EndCheck

        If IO.Directory.Exists("Data") = False Then
            IO.Directory.CreateDirectory("Data")
        End If
    End Sub

    Private Sub Form1_Shown(sender As Object, e As EventArgs) Handles Me.Shown
        'ServerEngine.InvokableForm = Me
    End Sub

    Private Sub Guna2Button1_Click(sender As Object, e As EventArgs) Handles Guna2Button1.Click
        Guna2Button3.Enabled = False
        Guna2ProgressBar1.Visible = True
        Start()
    End Sub

    Private Sub Guna2Button2_Click(sender As Object, e As EventArgs) Handles Guna2Button2.Click
        If RequestThread IsNot Nothing Then
            If RequestThread.IsAlive Then
                If RequestThread.ThreadState = ThreadState.Running Then RequestThread.Suspend()
            End If
        End If
        Guna2Button3.Enabled = True
    End Sub


    Private Sub Guna2Button4_Click(sender As Object, e As EventArgs) Handles Guna2Button4.Click
        If RequestThread IsNot Nothing Then
            If RequestThread.ThreadState = ThreadState.Suspended Then
                RequestThread.Resume()
            End If
            Thread.Sleep(1000)
            RequestThread.Abort()
            RequestThread.DisableComObjectEagerCleanup()
            RequestThread = Nothing
        End If
        Guna2ProgressBar1.Visible = False
        Guna2Button3.Enabled = True
    End Sub

#Region "ThreadMoon"

    Public RequestThread As Thread = Nothing


    Private Sub Start()

        If String.IsNullOrEmpty(Guna2TextBox2.Text) = True Then Guna2TextBox2.Text = 0
        If String.IsNullOrEmpty(Guna2TextBox3.Text) = True Then Guna2TextBox3.Text = Val(Guna2TextBox2.Text) + 1

        If Guna2TextBox2.Text > Guna2TextBox3.Text Then
            MsgBox("The Lesser cannot be Greater")
            Exit Sub
        End If

        If RequestThread Is Nothing Then
            Guna2TextBox4.Clear()
            RequestThread = New Thread(AddressOf BruteForce, 0)
            RequestThread.IsBackground = True
            RequestThread.Start()
            My.Settings.EndCheck = Guna2TextBox3.Text
            My.Settings.Save()
        Else
            If RequestThread.IsAlive Then
                If RequestThread.ThreadState = ThreadState.Suspended Then RequestThread.Resume()
            End If
        End If
    End Sub

    Private ToPause As Boolean = False

    Public Async Sub BruteForce()
        Dim Min As Integer = Val(Guna2TextBox2.Text)
        Dim Max As Integer = Val(Guna2TextBox3.Text)

        Dim MaxValEx As Integer = Val(Max - Min)
        Me.BeginInvoke(Sub()
                           Guna2ProgressBar1.Maximum = MaxValEx
                           Guna2ProgressBar1.Invalidate()

                       End Sub)


        For i As Integer = Min To Max
            My.Settings.LastCheck = i.ToString


            Me.BeginInvoke(Sub()
                               Guna2TextBox2.Text = i.ToString
                               Guna2TextBox2.Invalidate()
                           End Sub)

            Dim PostData As String = ServerEngine.Get_UserData(i.ToString)
            Dim ParseData As List(Of PersonData) = Nothing
            Me.BeginInvoke(Async Sub()
                               ParseData = Await ServerEngine.ParseUserData(PostData)
                           End Sub)

            For x As Integer = 0 To 2
                If ParseData IsNot Nothing Then Exit For
                x -= 1
            Next

            If ParseData.Count > 0 Then

                Dim ToJson As String = ServerEngine.ParseToJson(i.ToString, ParseData)
                IO.File.WriteAllText(IO.Path.Combine("Data", i.ToString & ".json"), ToJson)
                WriteLog(i.ToString & " ---->  Info Dumpped!! | Saved to : Data\" & i.ToString & ".json")

            Else

                Dim ErrorEx As String = ServerEngine.ErrorMsg
                If String.IsNullOrEmpty(ErrorEx) Then ErrorEx = "Does not exist!!, Try another number. "
                WriteLog(i.ToString & " ---->  Error : " & ErrorEx)

            End If

            Me.BeginInvoke(Sub()
                               Guna2ProgressBar1.Value += 1
                               Guna2ProgressBar1.Invalidate()
                               Guna2TextBox4.SelectionStart = Guna2TextBox4.Text.Length
                               Guna2TextBox4.ScrollToCaret()
                           End Sub)
            My.Settings.Save()

            GC.Collect(GC.MaxGeneration, GCCollectionMode.Forced)
        Next

        WriteLog("[INFO] Brute Force Ended!")

    End Sub


#End Region

#Region " Methods "

    Private Sub WriteLog(ByVal msg As String)
        Try
            Me.BeginInvoke(Sub()
                               Guna2TextBox4.Text += msg & vbNewLine
                           End Sub)
        Catch ex As Exception

        End Try
    End Sub

    Private Async Sub Guna2Button3_Click(sender As Object, e As EventArgs) Handles Guna2Button3.Click
        Guna2TextBox4.Text = ""
        Dim i As String = Guna2TextBox1.Text
        If String.IsNullOrEmpty(Guna2TextBox1.Text) = False Then
            My.Settings.LastID = Guna2TextBox1.Text
            My.Settings.Save()


            WriteLog(vbNewLine)
            WriteLog("----------------Nic: " & i & "-------------------")
            Dim PostData As String = ServerEngine.Get_UserData(i.ToString)
            Dim ParseData As List(Of PersonData) = Await ServerEngine.ParseUserData(PostData)

            If ParseData.Count > 0 Then

                Dim ToJson As String = ServerEngine.ParseToJson(i.ToString, ParseData)
                IO.File.WriteAllText(IO.Path.Combine("Data", i.ToString & ".json"), ToJson)
                WriteLog(i.ToString & " ---->  Info Dumpped!! | Saved to : Data\" & i.ToString & ".json")

            Else

                Dim ErrorEx As String = ServerEngine.ErrorMsg
                If String.IsNullOrEmpty(ErrorEx) = True Then ErrorEx = "Does not exist!!, Try another number. "

                WriteLog(i.ToString & " ---->  Error : " & ErrorEx)
            End If

            WriteLog("---------------------------------------------")
            WriteLog(vbNewLine)
            Guna2TextBox2.SelectionStart = Guna2TextBox2.Text.Length
            Guna2TextBox2.ScrollToCaret()
        End If
    End Sub

    Private Sub Form1_Closed(sender As Object, e As EventArgs) Handles Me.Closed
        Environment.Exit(0)
    End Sub


#End Region


End Class
